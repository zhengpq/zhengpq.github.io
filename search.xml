<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[html和css知识点总结]]></title>
    <url>%2F2018%2F03%2F08%2Fhtml%E5%92%8Ccss%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[1 HTML1.1Doctype1、Doctype作用：声明文档类型，告知浏览器使用哪种方式对文档进行解析， HTML 4.01各种Doctype声明格式以及区别： Strict：&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;包含所有的HTML元素和属性，但是不包含过时的元素 Transitional：&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;包含所有的HTML元素和属性，同时包含过时的元素，框架集不允许 Frameset：&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot; &quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&gt;包含所有的HTML元素和属性，包含过时元素，框架集允许 HTML5Doctype的声明：&lt;!DOCTYPE HTML&gt;HTML5没有基于SGML（标准通用标记语言，超文本格式的最高标准） 1.2 MetaMeta包含在head元素中，能够对文档进行声明，比如SEO,文档的字符编码 具体作用： 声明文档使用的字符编码：&lt;meta charset=&#39;utf-8&#39;&gt; 声明文档的兼容模式： 12&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt; 指示IE以目前可用的最高模式显示内容&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Emulate IE7&quot; /&gt;指示IE使用 &lt;!DOCTYPE&gt; 指令确定如何呈现内容。标准模式指令以IE7 标准模式显示，而 Quirks 模式指令以 IE5 模式显示。 SEO优化 1234&lt;meta name=&quot;description&quot; content=&quot;不超过150个字符&quot; /&gt;页面描述&lt;meta name=&quot;keywords&quot; content=&quot;关键字&quot;/&gt;页面关键词&lt;meta name=&quot;author&quot; content=&quot;魔法小栈&quot; /&gt;定义网页作者&lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot; /&gt;定义网页搜索引擎索引方式，robotterms是一组使用英文逗号「,」分割的值，通常有如下几种取值：none，noindex，nofollow，all，index和follow。 移动端添加viewport 1234567&lt;meta name =&quot;viewport&quot; content =&quot;width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no&quot;&gt;经常用在响应式中:width：可视区域的宽度，device-width：设备屏幕的宽度，可以自适应多端设备initial-scale 初始缩放比例maximum-scale 最大缩放比例minimum-scale 最小缩放比例user-scalable 是否允许用户缩放(yes/no) 页面出现很多的http请求时自动转换成https： 1&lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;upgrade-insecure-requests&quot; /&gt; 1.3行内元素、块级元素以及空元素的区别1、行内元素是在同一行排列直到宽度不够转入下行，块级元素默认换行排列2、行内元素没有办法设置width、height、padding和margin，块状元素可以3、vertical-align只能作用在行内元素不能作用在块级元素4、display:block：字面上将一个元素设置为块级的5、display:inline-block：字面上将一个元素设置为行内元素，但是这种行内元素能够设置width、height、margin和padding 1.4页面导入样式方式1、在head插入&lt;style&gt;&lt;/style&gt;标签2、嵌入style=&quot;&quot;3、link引入文件4、@import中引入另外一个CSS文件（存在兼容性问题，只能在IE5以上才会兼容） 1.5浏览器内核 Trident内核：IE、360 Gecko：火狐 Presto：Opera Webkit：Chrome、Safari 2 CSS2.1盒子模型W3C制定的标准的盒子模型如下图： IE早期版本的盒子模型： 二者最大的区别在于Content区域，后者的width和height都包括了padding和border 对盒子模型的设置：123box-sizing:content-box;(默认）//页面使用标准模式进行解析box-sizing:border-box;//使用怪异模式box-sizing:inherit;//页面从父元素继承box-sizing的值 2.2居中1、水平居中：给盒子设置一个确定的width，然后添加margin:0 auto1234#center&#123; width: 300px; margin:0 auto; &#125; 2、绝对定位的div居中123456#absolute&#123; position: absolute; width:300px; margin-left: -150px; left:50%; &#125; 3、绝对垂直居中12345678910111213141516171819202122232425262728293031323334//缺点：元素的宽高必须是具体值或者是百分比#absolute-center&#123; position: absolute; width: 100px; height:100px; top: 0; left:0; right: 0; bottom: 0; margin: auto; background-color: black; &#125; //利用translate是百分比是相对于自身的width和height #absolute-center&#123; position: absolute; width: 10%; height:10%; top: 50%; left:50%; transform: translate(-50%,-50%); &#125;//使用flex布局.container &#123; display: flex; align-items: center; /* 垂直居中 */ justify-content: center; /* 水平居中 */ &#125; .container div &#123; width: 100px; height: 100px; background-color: pink; /* 方便看效果 */ &#125; 2.3清除浮动清除浮动的原因是在使用浮动之后，元素会脱离文档流，类似于将浮动的元素抽离出来，浮动在上方，而文档在下方，分成两层。这样就会造成塌陷。最经典的例子就是在圣杯布局里面。 先看下面这圣杯布局的代码以及效果12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455//html&lt;body&gt;&lt;div id=&quot;header&quot;&gt;#header&lt;/div&gt;&lt;div id=&quot;container&quot;&gt; &lt;div id=&quot;center&quot; class=&quot;column&quot;&gt;#center&lt;/div&gt; &lt;div id=&quot;left&quot; class=&quot;column&quot;&gt;#left&lt;/div&gt; &lt;div id=&quot;right&quot; class=&quot;column&quot;&gt;#right&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;footer&quot;&gt;#footer&lt;/div&gt;&lt;/body&gt;//cssbody &#123; min-width: 550px; /* 2x LC width + RC width */ &#125; #container&#123; padding-left: 200px; padding-right: 200px; background-color: red; &#125; .column&#123; float: left; height: 200px; &#125; #center&#123; width: 100%; background-color: aquamarine; &#125; #left,#right&#123; position: relative; width: 200px; &#125; #left&#123; margin-left: -100%; right: 200px; background-color: blue; &#125; #right&#123; margin-right: -200px; background-color: #00B7FF; &#125; #footer &#123; clear: both;//清除浮动 &#125; #header, #footer &#123; background-color: #c9c9c9; &#125; /*** IE6 Fix ***/ * html #left &#123; left: 150px;/* RC width */ &#125; 效果图： 此时footer是在最底下的。然后去掉这段代码：123#footer &#123; clear: both;//清除浮动 &#125; 再看效果如下： 很明显，footer跑到header下面了，很好说明了使用float后元素被抽离的本质。 那么，如何清除浮动呢？具体有以下几种方式: 父级元素设置高度以上面的圣杯布局为例，给container设置高度，然后就可以看见footer跑到下面来了，原理就是因为元素浮动后脱离文档流，在没有给父盒子设置高度的情况下，父盒子里面没有包含东西，所以默认的高度是0，设置之后就相当于给父盒子填充了内容，不过缺点是高度限制住了 使用clear:both，在浮动元素后面添加一个占位元素，然后使用clear属性。以上面的为例： 123456789101112131415//html&lt;div id=&quot;container&quot;&gt; &lt;div id=&quot;center&quot; class=&quot;column&quot;&gt;#center&lt;/div&gt; &lt;div id=&quot;left&quot; class=&quot;column&quot;&gt;#left&lt;/div&gt; &lt;div id=&quot;right&quot; class=&quot;column&quot;&gt;#right&lt;/div&gt;&lt;/div&gt;&lt;div id=&apos;clear&apos;&gt;&lt;/div&gt;//占位元素&lt;div id=&quot;footer&quot;&gt;#footer&lt;/div&gt;//css#clear&#123; height:0; clear: both; &#125; 使用伪类，原理也是使用占位元素，还是以圣杯布局为例，在父元素container使用伪类 12345#container:after&#123; content: &apos;&apos;; height:0; clear: both; &#125; 2.4圣杯布局圣杯布局是经典的三栏布局，是前端入门必须掌握的一个布局方式，但是，网上有很多博客都有讲到如何实现圣杯布局，但是在原理上面却没有深究，其中两个关键点是左边的盒子为什么要加上margin-left: -100%;，这个属性而右边的盒子为什么要加上margin-right: -200px;（假设盒子是200px宽）这个属性。具体的如何实现圣杯布局的代码和过程可以参考这篇文章，作者讲得很详细：关于圣杯布局 下面我就来讲讲我对其中原理的理解，具体的圣杯布局的代码可以参考上面或者是推荐的文章。 因为center、left和right三者都用了float:left，所以，如果在container的width足够大的情况下，三者是如下图排列的： 所以，如果此时想让left跑到center的左边，就得用margin-left:100%，margin-left:100%百分比是相对于父元素，之后三者的排列关系如下： 此时left是覆盖在center上面的，然后再使用position:relative进行位置的调整，然后对于右边的盒子呢，不要忘记上面是我们假设父盒子width足够大的情况下，但是实际情况是父盒子设置了padding，所以实际情况下三者的位置是如下面的： 因为宽度不够，原本的left和right都被挤到下面来了，但是left在设置了margin-left转移到上面去了，right就跑到最左边来了，结合上一个图，可以知道原本上图right所在的位置是实际情况中的container的padding，那么如果想让right盒子跑到右边，那么就设置margin-right等于他自身就可以了。 2.5 SEO前端实现SEO优化的技巧：1、使用好meta标签 meta的keywords，说明网站的关键词。具体代码如下：&lt;meta name=&quot;Keywords&quot;content=&quot;信息参数&quot;/&gt; meta的description，说明网站的主要内容和概况，代码：&lt;meta name=&quot;Description&quot;content=&quot;信息参数&quot;/&gt; meta的robots，告诉搜素引擎抓取哪些页面，代码：&lt;meta name=&quot;Robots&quot; content=&quot;all&quot;/&gt;all代表文件可以被检索，同时页面上的链接可以被查询具体的Robots的参数如下： 参数 含义 all 文件可以被检索，且页面上的链接可以被查询 none 文件不被检索，页面上的链接不可以查询 index 文件被检索 follow 页面上的链接可以被查询 noindex 问价将不被检索，但页面上的链接可以被查询 nofollow 问价将被检索，页面上的链接不可以被检索 2、其他的优化SEO的技巧： 每个页面只出现一个h1 图片加alt，图片大小做声明，如果图片大小不定义的话会造成页面重新渲染，小图标使用雪碧图，如果能够使用CSS，不使用图片，减少请求次数。 尽量使用iframe框架，重要内容不要放在iframe中 尽量给a标签加上title 参考文章[前端开发面试题][10][SEO优化技巧][11]]]></content>
      <categories>
        <category>html&amp;&amp;css</category>
      </categories>
      <tags>
        <tag>html、css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F09%2F26%2FHello-World%2F</url>
    <content type="text"><![CDATA[Hello World!]]></content>
      <tags>
        <tag>personal</tag>
      </tags>
  </entry>
</search>
